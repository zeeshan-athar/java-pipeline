pipeline {
    agent { 
        label 'master' 
    }
    
    environment {
        deployOn = 'staging'
    }
    
    stages {
        stage('Deployment started') {
            steps {
                script {
                    if (deployOn == 'production') {
                        echo 'Deploying to : ' + deployOn
                        ansiblePlaybook become: true, colorized: true, credentialsId: 'ansible-login', disableHostKeyChecking: true, installation: 'ansible', inventory: 'pipeline/hosts', playbook: 'pipeline/helmPlaybook.yaml'
                    }  else if (deployOn == 'staging') {
                        echo 'Deploying to : ' + deployOn
                        withCredentials([usernamePassword(credentialsId: 'dockerhublogin', usernameVariable: 'dh_username', passwordVariable: 'dh_password')]){
                        ansiblePlaybook become: true, extras: '-e dh_username=$dh_username -e dh_password=$dh_password', colorized: true, credentialsId: 'ansible-login', disableHostKeyChecking: true, installation: 'ansible', inventory: 'pipeline/hosts', playbook: 'pipeline/playbook.yaml'
                        }} else if (deployOn == 'testing') {
                        echo 'Deploying to : ' + deployOn
                        withCredentials([usernamePassword(credentialsId: 'dockerhublogin', usernameVariable: 'dh_username', passwordVariable: 'dh_password')]){
                        ansiblePlaybook become: true, extras: '-e dh_username=$dh_username -e dh_password=$dh_password', colorized: true, credentialsId: 'ansible-login', disableHostKeyChecking: true, installation: 'ansible', inventory: 'pipeline/hosts', playbook: 'pipeline/testPlaybook.yaml'
                        }
                    }
                }
            }
        }
    }
}
